{"ast":null,"code":"import { takeEvery, call, put, all } from 'redux-saga/effects';\nimport ShopActionTypes from './shop.types';\nimport { fetchCollectionSuccess, fetchCollectionFailure } from './shop.action';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase';\nexport function* fetchCollectionsAsync() {\n  try {\n    const collectionRef = yield firestore.collection('collections');\n    const snapshot = yield collectionRef.get();\n    const collectionMap = yield call(convertCollectionsSnapshotToMap, snapshot);\n    yield put(fetchCollectionSuccess(collectionMap));\n  } catch (error) {\n    yield put(fetchCollectionFailure(error.message));\n  }\n}\nexport function* fetchCollectionsStart() {\n  yield takeEvery(ShopActionTypes.FETCH_COLLECTION_START, fetchCollectionsAsync);\n}\nexport function* shopSaga() {\n  yield all([call(fetchCollectionsStart)]);\n}","map":{"version":3,"sources":["/home/rrg/Documents/My Project/rrg-clothing/src/redux/shop/shop.sagas.js"],"names":["takeEvery","call","put","all","ShopActionTypes","fetchCollectionSuccess","fetchCollectionFailure","firestore","convertCollectionsSnapshotToMap","fetchCollectionsAsync","collectionRef","collection","snapshot","get","collectionMap","error","message","fetchCollectionsStart","FETCH_COLLECTION_START","shopSaga"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,IAApB,EAA0BC,GAA1B,EAA+BC,GAA/B,QAA0C,oBAA1C;AAEA,OAAOC,eAAP,MAA4B,cAA5B;AACA,SAASC,sBAAT,EAAiCC,sBAAjC,QAA+D,eAA/D;AACA,SACEC,SADF,EAEEC,+BAFF,QAGO,yBAHP;AAKA,OAAO,UAAUC,qBAAV,GAAkC;AACvC,MAAI;AACF,UAAMC,aAAa,GAAG,MAAMH,SAAS,CAACI,UAAV,CAAqB,aAArB,CAA5B;AACA,UAAMC,QAAQ,GAAG,MAAMF,aAAa,CAACG,GAAd,EAAvB;AACA,UAAMC,aAAa,GAAG,MAAMb,IAAI,CAACO,+BAAD,EAAkCI,QAAlC,CAAhC;AACA,UAAMV,GAAG,CAACG,sBAAsB,CAACS,aAAD,CAAvB,CAAT;AACD,GALD,CAKE,OAAOC,KAAP,EAAc;AACd,UAAMb,GAAG,CAACI,sBAAsB,CAACS,KAAK,CAACC,OAAP,CAAvB,CAAT;AACD;AACF;AAED,OAAO,UAAUC,qBAAV,GAAkC;AACvC,QAAMjB,SAAS,CACbI,eAAe,CAACc,sBADH,EAEbT,qBAFa,CAAf;AAID;AAED,OAAO,UAAUU,QAAV,GAAqB;AAC1B,QAAMhB,GAAG,CAAC,CAACF,IAAI,CAACgB,qBAAD,CAAL,CAAD,CAAT;AACD","sourcesContent":["import { takeEvery, call, put, all } from 'redux-saga/effects';\n\nimport ShopActionTypes from './shop.types';\nimport { fetchCollectionSuccess, fetchCollectionFailure } from './shop.action';\nimport {\n  firestore,\n  convertCollectionsSnapshotToMap,\n} from '../../firebase/firebase';\n\nexport function* fetchCollectionsAsync() {\n  try {\n    const collectionRef = yield firestore.collection('collections');\n    const snapshot = yield collectionRef.get();\n    const collectionMap = yield call(convertCollectionsSnapshotToMap, snapshot);\n    yield put(fetchCollectionSuccess(collectionMap));\n  } catch (error) {\n    yield put(fetchCollectionFailure(error.message));\n  }\n}\n\nexport function* fetchCollectionsStart() {\n  yield takeEvery(\n    ShopActionTypes.FETCH_COLLECTION_START,\n    fetchCollectionsAsync\n  );\n}\n\nexport function* shopSaga() {\n  yield all([call(fetchCollectionsStart)]);\n}\n"]},"metadata":{},"sourceType":"module"}