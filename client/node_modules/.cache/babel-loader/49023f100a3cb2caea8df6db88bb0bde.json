{"ast":null,"code":"import CartActionTypes from './cart-types';\nimport { addItemToCart, removeItemFromCart } from './cart-utils';\nconst INITIAL_STATE = {\n  hidden: true,\n  CartItems: []\n};\n\nconst cartReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case CartActionTypes.TOGGLE_CART_HIDDEN:\n      return { ...state,\n        hidden: !state.hidden\n      };\n\n    case CartActionTypes.ADD_ITEM:\n      return { ...state,\n        CartItems: addItemToCart(state.CartItems, action.payload)\n      };\n\n    case CartActionTypes.CLEAR_ITEM:\n      return { ...state,\n        CartItems: state.CartItems.filter(cartItem => cartItem.id !== action.payload.id)\n      };\n\n    case CartActionTypes.REMOVE_ITEM:\n      return { ...state,\n        CartItems: removeItemFromCart(state.CartItems, action.payload)\n      };\n\n    case CartActionTypes.CLEAR_CART:\n      return { ...state,\n        CartItems: [],\n        hidden: true\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default cartReducer;","map":{"version":3,"sources":["/home/rrg/Documents/My Project/rrg-clothing/client/src/redux/cart/cart-reducer.js"],"names":["CartActionTypes","addItemToCart","removeItemFromCart","INITIAL_STATE","hidden","CartItems","cartReducer","state","action","type","TOGGLE_CART_HIDDEN","ADD_ITEM","payload","CLEAR_ITEM","filter","cartItem","id","REMOVE_ITEM","CLEAR_CART"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,cAA5B;AACA,SAASC,aAAT,EAAwBC,kBAAxB,QAAkD,cAAlD;AAEA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,MAAM,EAAE,IADY;AAEpBC,EAAAA,SAAS,EAAE;AAFS,CAAtB;;AAKA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGJ,aAAT,EAAwBK,MAAxB,KAAmC;AACrD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKT,eAAe,CAACU,kBAArB;AACE,aAAO,EACL,GAAGH,KADE;AAELH,QAAAA,MAAM,EAAE,CAACG,KAAK,CAACH;AAFV,OAAP;;AAKF,SAAKJ,eAAe,CAACW,QAArB;AACE,aAAO,EACL,GAAGJ,KADE;AAELF,QAAAA,SAAS,EAAEJ,aAAa,CAACM,KAAK,CAACF,SAAP,EAAkBG,MAAM,CAACI,OAAzB;AAFnB,OAAP;;AAKF,SAAKZ,eAAe,CAACa,UAArB;AACE,aAAO,EACL,GAAGN,KADE;AAELF,QAAAA,SAAS,EAAEE,KAAK,CAACF,SAAN,CAAgBS,MAAhB,CACRC,QAAD,IAAcA,QAAQ,CAACC,EAAT,KAAgBR,MAAM,CAACI,OAAP,CAAeI,EADpC;AAFN,OAAP;;AAOF,SAAKhB,eAAe,CAACiB,WAArB;AACE,aAAO,EACL,GAAGV,KADE;AAELF,QAAAA,SAAS,EAAEH,kBAAkB,CAACK,KAAK,CAACF,SAAP,EAAkBG,MAAM,CAACI,OAAzB;AAFxB,OAAP;;AAKF,SAAKZ,eAAe,CAACkB,UAArB;AACE,aAAO,EACL,GAAGX,KADE;AAELF,QAAAA,SAAS,EAAE,EAFN;AAGLD,QAAAA,MAAM,EAAE;AAHH,OAAP;;AAMF;AACE,aAAOG,KAAP;AAnCJ;AAqCD,CAtCD;;AAwCA,eAAeD,WAAf","sourcesContent":["import CartActionTypes from './cart-types';\nimport { addItemToCart, removeItemFromCart } from './cart-utils';\n\nconst INITIAL_STATE = {\n  hidden: true,\n  CartItems: [],\n};\n\nconst cartReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case CartActionTypes.TOGGLE_CART_HIDDEN:\n      return {\n        ...state,\n        hidden: !state.hidden,\n      };\n\n    case CartActionTypes.ADD_ITEM:\n      return {\n        ...state,\n        CartItems: addItemToCart(state.CartItems, action.payload),\n      };\n\n    case CartActionTypes.CLEAR_ITEM:\n      return {\n        ...state,\n        CartItems: state.CartItems.filter(\n          (cartItem) => cartItem.id !== action.payload.id\n        ),\n      };\n\n    case CartActionTypes.REMOVE_ITEM:\n      return {\n        ...state,\n        CartItems: removeItemFromCart(state.CartItems, action.payload),\n      };\n\n    case CartActionTypes.CLEAR_CART:\n      return {\n        ...state,\n        CartItems: [],\n        hidden: true,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default cartReducer;\n"]},"metadata":{},"sourceType":"module"}