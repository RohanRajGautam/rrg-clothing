{"ast":null,"code":"var _jsxFileName = \"/home/rrg/Documents/My Project/rrg-clothing/src/components/sign-up/SignUp.js\";\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { signUpStart } from '../../redux/user/user.actions';\nimport FormInput from '../form-input/FormInput';\nimport CustomButton from '../custom-button/CustomButton';\nimport { SignUpContainer, TitleContainer } from './sign-up-styles';\n\nconst SignUp = ({\n  displayName,\n  email,\n  password,\n  confirmPassword,\n  signUpStart\n}) => {\n  const [credential, setCredential] = useState({\n    displayName: '',\n    email: '',\n    password: '',\n    confirmPassword: ''\n  });\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const {\n      displayName,\n      email,\n      password,\n      confirmPassword\n    } = credential;\n\n    if (password !== confirmPassword) {\n      alert('password does not match');\n      return;\n    }\n\n    signUpStart({\n      email,\n      password,\n      displayName\n    });\n  };\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setCredential({ ...credential,\n      [name]: value\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(SignUpContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(TitleContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, \"I do not have a account.\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, \"Sign up with your email and password\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    type: \"text\",\n    name: \"displayName\",\n    value: displayName,\n    label: \"Display Name\",\n    onChange: handleChange,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    type: \"email\",\n    name: \"email\",\n    value: email,\n    label: \"Email\",\n    onChange: handleChange,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    type: \"password\",\n    name: \"password\",\n    value: password,\n    label: \"Password\",\n    onChange: handleChange,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    type: \"password\",\n    name: \"confirmPassword\",\n    value: confirmPassword,\n    label: \"Confirm Password\",\n    onChange: handleChange,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(CustomButton, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, \"SIGN UP\")));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  signUpStart: userCredential => dispatch(signUpStart(userCredential))\n});\n\nexport default connect(null, mapDispatchToProps)(SignUp);","map":{"version":3,"sources":["/home/rrg/Documents/My Project/rrg-clothing/src/components/sign-up/SignUp.js"],"names":["React","useState","connect","signUpStart","FormInput","CustomButton","SignUpContainer","TitleContainer","SignUp","displayName","email","password","confirmPassword","credential","setCredential","handleSubmit","e","preventDefault","alert","handleChange","name","value","target","mapDispatchToProps","dispatch","userCredential"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { connect } from 'react-redux';\n\nimport { signUpStart } from '../../redux/user/user.actions';\n\nimport FormInput from '../form-input/FormInput';\nimport CustomButton from '../custom-button/CustomButton';\nimport { SignUpContainer, TitleContainer } from './sign-up-styles';\n\nconst SignUp = ({\n  displayName,\n  email,\n  password,\n  confirmPassword,\n  signUpStart,\n}) => {\n  const [credential, setCredential] = useState({\n    displayName: '',\n    email: '',\n    password: '',\n    confirmPassword: '',\n  });\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const { displayName, email, password, confirmPassword } = credential;\n\n    if (password !== confirmPassword) {\n      alert('password does not match');\n      return;\n    }\n\n    signUpStart({ email, password, displayName });\n  };\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n\n    setCredential({ ...credential, [name]: value });\n  };\n\n  return (\n    <SignUpContainer>\n      <TitleContainer>I do not have a account.</TitleContainer>\n      <span>Sign up with your email and password</span>\n      <form onSubmit={handleSubmit}>\n        <FormInput\n          type='text'\n          name='displayName'\n          value={displayName}\n          label='Display Name'\n          onChange={handleChange}\n          required\n        />\n        <FormInput\n          type='email'\n          name='email'\n          value={email}\n          label='Email'\n          onChange={handleChange}\n          required\n        />\n        <FormInput\n          type='password'\n          name='password'\n          value={password}\n          label='Password'\n          onChange={handleChange}\n          required\n        />\n        <FormInput\n          type='password'\n          name='confirmPassword'\n          value={confirmPassword}\n          label='Confirm Password'\n          onChange={handleChange}\n          required\n        />\n        <CustomButton type='submit'>SIGN UP</CustomButton>\n      </form>\n    </SignUpContainer>\n  );\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  signUpStart: (userCredential) => dispatch(signUpStart(userCredential)),\n});\n\nexport default connect(null, mapDispatchToProps)(SignUp);\n"]},"metadata":{},"sourceType":"module"}